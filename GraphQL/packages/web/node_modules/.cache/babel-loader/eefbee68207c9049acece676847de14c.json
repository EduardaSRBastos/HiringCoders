{"ast":null,"code":"import { ApolloLink, Observable } from 'apollo-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nconst loggerLink = new ApolloLink((operation, forward) => new Observable(observer => {\n  const subscription = forward(operation).subscribe({\n    next: result => {\n      console.log('Log', result);\n      observer.next(result);\n    },\n    error: observer.error.bind(observer),\n    complete: observer.complete.bind(observer)\n  });\n  return () => subscription.unsubscribe();\n}));\nconst link = ApolloLink.from([loggerLink, onError(error => {\n  console.error('GraphQLError', error);\n}), setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  return {\n    headers\n  };\n}), createHttpLink({\n  uri: 'http://127.0.0.1:8000/graphql'\n})]);\nexport default link;","map":{"version":3,"names":["ApolloLink","Observable","createHttpLink","setContext","onError","loggerLink","operation","forward","observer","subscription","subscribe","next","result","console","log","error","bind","complete","unsubscribe","link","from","_","headers","uri"],"sources":["C:/Users/Duda Bastos/Desktop/Programing/Hiring Coders/GraphQL/packages/web/src/plugins/apollo/link.js"],"sourcesContent":["import { ApolloLink, Observable } from 'apollo-link';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { onError } from 'apollo-link-error';\r\n\r\nconst loggerLink = new ApolloLink(\r\n  (operation, forward) =>\r\n    new Observable((observer) => {\r\n      const subscription = forward(operation).subscribe({\r\n        next: (result) => {\r\n          console.log('Log', result);\r\n          observer.next(result);\r\n        },\r\n        error: observer.error.bind(observer),\r\n        complete: observer.complete.bind(observer),\r\n      });\r\n\r\n      return () => subscription.unsubscribe();\r\n    })\r\n);\r\n\r\nconst link = ApolloLink.from([\r\n  loggerLink,\r\n  onError((error) => {\r\n    console.error('GraphQLError', error);\r\n  }),\r\n  setContext((_, { headers }) => {\r\n    return {\r\n      headers,\r\n    };\r\n  }),\r\n  createHttpLink({\r\n    uri: 'http://127.0.0.1:8000/graphql',\r\n  }),\r\n]);\r\n\r\nexport default link;\r\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,aAAvC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,UAAU,GAAG,IAAIL,UAAJ,CACjB,CAACM,SAAD,EAAYC,OAAZ,KACE,IAAIN,UAAJ,CAAgBO,QAAD,IAAc;EAC3B,MAAMC,YAAY,GAAGF,OAAO,CAACD,SAAD,CAAP,CAAmBI,SAAnB,CAA6B;IAChDC,IAAI,EAAGC,MAAD,IAAY;MAChBC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,MAAnB;MACAJ,QAAQ,CAACG,IAAT,CAAcC,MAAd;IACD,CAJ+C;IAKhDG,KAAK,EAAEP,QAAQ,CAACO,KAAT,CAAeC,IAAf,CAAoBR,QAApB,CALyC;IAMhDS,QAAQ,EAAET,QAAQ,CAACS,QAAT,CAAkBD,IAAlB,CAAuBR,QAAvB;EANsC,CAA7B,CAArB;EASA,OAAO,MAAMC,YAAY,CAACS,WAAb,EAAb;AACD,CAXD,CAFe,CAAnB;AAgBA,MAAMC,IAAI,GAAGnB,UAAU,CAACoB,IAAX,CAAgB,CAC3Bf,UAD2B,EAE3BD,OAAO,CAAEW,KAAD,IAAW;EACjBF,OAAO,CAACE,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,CAFM,CAFoB,EAK3BZ,UAAU,CAAC,CAACkB,CAAD,WAAoB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC7B,OAAO;IACLA;EADK,CAAP;AAGD,CAJS,CALiB,EAU3BpB,cAAc,CAAC;EACbqB,GAAG,EAAE;AADQ,CAAD,CAVa,CAAhB,CAAb;AAeA,eAAeJ,IAAf"},"metadata":{},"sourceType":"module"}